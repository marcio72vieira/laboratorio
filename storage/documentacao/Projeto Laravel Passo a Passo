=============================
CONFIGURAÇÕES INICIAIS
============================

1 - Criar um projeto com o Laravel:
    composer create-project --prefer-dist laravel/laravel setres-estagio "8.5.*"
    
2 - Criar o arquivo .env 
    a) na raiz do projeto, executar o comando: cp .env.exemple ./.env

3 - Gerar uma chave para o app (projeto)
    a) php artisan key:generate

4 - Configurar tradução
    a) obter arquivo de configuração em: https://github.com/Upinside/laravel-pt-BR
    b) criar pasta resources/lang/pt-BR
    c) descompactar o arquivo obtido na pasta criada acima
    d) alterar a propriedade 'locale' para 'locale' => 'pt-br', em config/app.php

5 - Alterar a propriedade 'timezone' para 'timezone' => 'America/Sao_Paulo', em config/app.php

6 - Criar o banco de dados no MySQL ou Postgres (talvez) com a colation utf8mb4 (mais precisamente utf8mb4-unicode-ci)

7 - No arquivo App/Providers/AppServiceProvider.php acrescentar:
    a) importar: use Illuminate\Support\Facades\Schema
    b) public function resgister(){ 
          Schema::defaultStringLength(191);
       }

8 - Criar uma chave no arquivo .env, como se segue:
    a) FILESYSTEM_DRIVER=public

9 - Configurar as credenciais do banco de dados no arquivo .env, conforme necessário

10 - Caso sinta necessidade, só se for necessário, altere o namespace da sua aplicação com o comando:
     a) php artisan app:name Setres


     
=============================
CRIAÇÃO MÓDULO DE LOGIN
=============================

1 - Criar/Alterar migrations de User com campos conforme necessário
2 - Executar Migration
    a) php artisan migrate
    
3 - Criar controller de User
    a) php artisan make:controller Admin/UserController -r (cria o controller com todos os resources na pasta app/Http/Controllers/Admin)

4 - Criar requests User e definir as regras de validação.
    a) php artisan make:request UserCreateRequest. Alterar o retorno do método authorize desta request para true.
    b) php artisan make:request UserUpdateRequest. Alterar o retorno do método authorize desta request para true
    c) Importar os respectivos requests criados e utilizá-los nos respectivos métodos create e update do controller User.
    

5 - Criar rotas conforme necessário do tipo resource. Utilizar middleware também conforme necessário.
    a) use App\Http\Controllers\Admin\UserController;
    b) Route::resource('user', UserController::class);

6 - Criar view index.blade.php para listar usuários usuário;
7 - Implementar método index do UserCortroller para exibir view index.blade.php, não esquecer de importar modelo User
    a) use App\Models\User;
    b) $users = User::all();
       return view('admin.user.index', compact('users'));
       
       
       
       
       
       
       
       
       
       
=========================
EXTRAS
=========================
1 - Site de Ícones: https://fontawesome.com/v4.7/icons/



